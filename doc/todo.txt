

Outstanding things to work on going forward:

DONE  - Need to ensure selection of artifacts and deletion of them 
DONE     works properly
DONE      - Dirty flag needs to be set if artifacts are deleted.
DONE  - Need to implement selection of pricebars so that they get
DONE     highlighted and the QLabels at the top get updated with the
DONE     pricebar.
DONE  - In pricebarchart.py, need to make sure when I create new
DONE    QGraphicsItems as either PriceBars or Artifacts, that the
DONE    QGrahpicsItem flags get set according to whatever tool mode I'm
DONE    currently in!
DONE  - Finish testing PriceBarEditWidget() and PriceBarEditDialog().
DONE  - Remove bolding option of PriceBars (and pen width of it, etc.).
DONE  - Need to add right-click context menus and popup info/edit 
DONE    dialog widgets.
DONE     - Add these functions to the pricebargraphicsitem:
DONE           handleSetAstro1(datetime)
DONE           handleSetAstro2(datetime)
DONE           handleSetAstro3(datetime)
DONE     - Add these functions to the base-class artifact:
DONE           handleSetAstro1(datetime)
DONE           handleSetAstro2(datetime)
DONE           handleSetAstro3(datetime)
DONE     - Each GraphicsItem type should have a function called:
DONE           createContextMenu(readOnlyMode=true)
DONE       and any supporting functions that are slots that are connected
DONE       to the actions returned in the QMenu (some of the below may or
DONE       may not apply to the particular graphicsitem):
DONE
DONE           handleSelect()
DONE           handleUnselect()
DONE           handleRemoveItem()
DONE           handleInfoEdit()
DONE           handleInfoShow()
DONE	   
DONE	   handleSetAstro1() (to overwrite and call the base-class
DONE	                      function with the appropriate arguments)
DONE	   handleSetAstro2() (to overwrite and call the base-class
DONE	                      function with the appropriate arguments)
DONE	   handleSetAstro3() (to overwrite and call the base-class
DONE	                      function with the appropriate arguments)
DONE           etc.
DONE
DONE
DONE     - Dialog widgets for info/editing of artifacts should be in new file: 
DONE       pricebarchart_dialogs.py
DONE
DONE  - Bug: BirthInfoEditWidget doesn't set (retain) the BirthInfo when
DONE    editing the BirthInfo of a PriceChartDocument.  Investigate why.
DONE
DONE  - Time measurement ruler.  (Draggable ends and middle).  Ruler shows
DONE    number of TDs, CDs, and weeks.  Hovering over it shows info about
DONE    those TDs, CDs, weeks, as well as start and end date and time.  -
DONE    Edit dialog for this to edit the start and end datetime or
DONE    coordinate.
DONE
DONE  - Need to implement 'Octave' (time) measurements.
DONE  - Need to implement 'Octave' (price) measurements.
DONE
DONE  - Modal scales ruler (draggable ends and middle).  
DONE      - Selection for changing the mode
DONE           - Rotate right by pressing 'g'.
DONE           - Rotate left by pressing 's'.
DONE           - Reversal via pressing 'r'.
DONE      - Edit dialog for this to edit the start and end 
DONE             datetime or coordinate.
DONE                - Via right-click menu.
DONE      - Draw the ticks.  This is based off of isEnabled().
DONE          - Add to artifact, stored setting for tick bar height.
DONE          - Add to artifact, stored setting for font size of text.
DONE          - Add to artifact, 'textEnabled' bool field.  
DONE                      Is disabled by default.
DONE      - Text is drawn for the ticks if isEnabled() and 
DONE           isTextEnabled() are true
DONE      - Add to modal scales edit dialog:
DONE      - Buttons for checkBoxAll and checkBoxNone for Enabled setting.
DONE           - one checkbox for textEnabled
DONE           - setting for tick bar height (of this one scale)
DONE           - setting for text font size. (of this one scale)
DONE
DONE  - QGraphicsItem for text on a PriceBarChart.

  - May need to update scaling to be able to calculate or adjust for
    square root of price and time.

    - Also may need to account for time and price chance (elapsed)
      from birth time.

  - Octave fan (which is a more general Gann fan).
     - Defined by origin and other 2 points.
     - Uses scaling.

  - Fibonnaci fan
     - Defined by origin and other 2 points.
     - Uses scaling.

  - PTV (Price-Time-Vector).

  - Add square root price modal scale.  (vertical bar) This is high
    and low price square rooted, and the musical scale from that, and
    then squared again to get the price.

  - Add square root time modal scale.  (horizontal bar) This is
    earlier timestamp square rooted, to the later timestamp square
    rooted. and the musical scale is created from that, and then
    squared again to get the timestamp.


  - Fibonnaci price retracement (which also implies extension since
    they are the same).

  - Fibonnaci time retracement (which also implies extension since
    they are the same).

  - Pi spiral
  - Fibonnaci spiral
  - Spiral based on doubling (cubing?).

  - Circles based on price and sqrt time.
  - Circles based on sqrt price and unit time.
  - Circles based on sqrt price and sqrt time.

  - Concentric circles at fibonnaci intervals (based on scaling).
  - Concentric circles based on doubling (cubing?).

  - Add to the ratio-scripts some of the special numbers from:
       http://en.wikipedia.org/wiki/List_of_numbers
  
       Specifically, pay attention to the:
         - Irrational and suspected irrational numbers
         - Hypercomplex numbers

  - Ruler for Vimsottari dasa (draggable ends and middle).
      - Dialog to edit start and end datetime.
      - Option to modify lifespan (i.e. timerange).

  - Ruler for all the other dasas (draggable ends and middle).
      - Dialog to edit start and end datetime.
      - Option to modify lifespan (i.e. timerange).

  - Modal charts (implement later?):
      Chart with pricebars in Trading Days (TDs).
      Chart with pricebars in Calendar Days (CDs).

  - Narayana Dasa  --> How to implement this?

  - In the astrologychart.SiderealRadixGraphicsItem, clean up the
    code.  Parameterize the pen/brush so that it has foreground color
    for things, background for things and so that the
    alpha/transparency is implemented so that I can overlap sq-of-9
    and other charts on top of it.

  - Add other QGraphicsItems and functionality for the astrology chart.

  - Need to create icons for the different new modes for creating indicators.
     - BarCount
     - etc.

  - Need to implement 'snap' functionality, for snapping to a whole bar, 
    bottom/top of a bar, or to the closest integer X (day) for 
    charting the astro chart.

  - Turn the __main__() functions in each source file into a list of
    calls to testXXXXX() functions... one for each of the classes
    being tested.  Maybe these testXXXXX() functions should be moved
    to a test component?

  Indicators:
  - Need to implement indicator for static octaves (in time).

  - Need to implement indicator (moving lines) for dynamic Octive (interval) ratio measurements as the planets move.
  - Need to implement indicator (moving) lines for aspect strength 
    (shad bala and ashtakavarga).

  - Need to implement the following:
     - traditional circle astro charts.
     - vedic astro charts.
     - square of 9 and other number charts.
     - spreadsheet widget (chart).

     - Things to think about:

       - How can I implement the above graphical charts so that I can
         do overlays on each other.  For example, the traditional
         circle astro chart overlapping the square of 9 on a
         QGraphicsScene.  That way I can do a transform on one
         (rotation) to anchor or align one with the other.
