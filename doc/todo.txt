

Outstanding things to work on going forward:

DONE
DONE  - Update the Time Measurement tool to include months.
DONE     - Add option to display text of various things.
DONE     - Also include calculation for square root of time elapsed.
DONE
DONE  - Add Price Measurement tool.  
DONE
DONE        - Price difference.
DONE        - Square root of price.
DONE
DONE	- Text scaling.
DONE        - text font
DONE        - text color
DONE	
DONE        
DONE

  - Fibonnaci price retracement (which also implies extension since
    they are the same).  FibPriceRetracementTool

  - Fibonnaci time retracement (which also implies extension since
    they are the same).  FibTimeRetracementTool.

  - Use 'snap' enabled flag for ptv tool.

      - Note it is already used for pricetimeinfo tool, but needs to
        be also changeable in other tool modes.  Make sure it doesn't
        get cleared between shifting to different tool modes.

  - Update scaling class to be able to calculate the following (using scaling):

      - Add to the scaling class, transform scaling values for the
        graphics view, as separate variables from just the regular
        scaling values.

      - Square root of a price (absolute).

      - Square root of a timestamp (elapsed time since birth).  
        With scaling applied.

      - Distance between two points (with scaling applied):
            - Between points: Constant price, varying time.
            - Between points: Constant time, varying price.
            - Between points: Varying price and time.
      - Square root of distance between two points (with scaling applied):
            - Between points: Constant price, varying time.
            - Between points: Constant time, varying price.
            - Between points: Varying price and time.

      - Return the amount of time elapsed since birth (with scaling applied).
      - Return the amount of price change since birth (with scaling applied).

  - For scaling of all the price/time calculations and their square
    roots, need to re-think how it all works (accessing the scaling
    class via the graphics scene), and make sure all calculations are
    correct and consistent.
    
  - Octave fan (which is a more general Gann fan).
     - Defined by origin and other 2 points.
     - Uses scaling.

  - Fibonnaci fan
     - Defined by origin and other 2 points.
     - Uses scaling.

  - PTV (Price-Time-Vector).
        - Distance (scaled).
        - Sqrt distance (scaled).

  - Add square root price modal scale.  (vertical bar) This is high
    and low price square rooted, and the musical scale from that, and
    then squared again to get the price.

  - Add square root time modal scale.  (horizontal bar) This is
    earlier timestamp square rooted, to the later timestamp square
    rooted. and the musical scale is created from that, and then
    squared again to get the timestamp.


  - Pi spiral
  - Fibonnaci spiral
  - Spiral based on doubling (cubing?).

  - Circles based on price and sqrt time.
  - Circles based on sqrt price and unit time.
  - Circles based on sqrt price and sqrt time.

  - Concentric circles at fibonnaci intervals (based on scaling).
  - Concentric circles based on doubling (cubing?).

  - Add to the ratio-scripts some of the special numbers from:
       http://en.wikipedia.org/wiki/List_of_numbers
  
       Specifically, pay attention to the:
         - Irrational and suspected irrational numbers
         - Hypercomplex numbers

  - Ruler for Vimsottari dasa (draggable ends and middle).
      - Dialog to edit start and end datetime.
      - Option to modify lifespan (i.e. timerange).

  - Ruler for all the other dasas (draggable ends and middle).
      - Dialog to edit start and end datetime.
      - Option to modify lifespan (i.e. timerange).

  - Modal charts (implement later?):
      Chart with pricebars in Trading Days (TDs).
      Chart with pricebars in Calendar Days (CDs).

  - Narayana Dasa  --> How to implement this?

  - In the astrologychart.SiderealRadixGraphicsItem, clean up the
    code.  Parameterize the pen/brush so that it has foreground color
    for things, background for things and so that the
    alpha/transparency is implemented so that I can overlap sq-of-9
    and other charts on top of it.

  - Add other QGraphicsItems and functionality for the astrology chart.

  - Need to create icons for the different new modes for creating indicators.
     - BarCount
     - etc.

  - Need to implement 'snap' functionality, for snapping to a whole bar, 
    bottom/top of a bar, or to the closest integer X (day) for 
    charting the astro chart.

  - Turn the __main__() functions in each source file into a list of
    calls to testXXXXX() functions... one for each of the classes
    being tested.  Maybe these testXXXXX() functions should be moved
    to a test component?

  Indicators:
  - Need to implement indicator for static octaves (in time).

  - Need to implement indicator (moving lines) for dynamic Octive (interval) ratio measurements as the planets move.
  - Need to implement indicator (moving) lines for aspect strength 
    (shad bala and ashtakavarga).

  - Need to implement the following:
     - traditional circle astro charts.
     - vedic astro charts.
     - square of 9 and other number charts.
     - spreadsheet widget (chart).

     - Things to think about:

       - How can I implement the above graphical charts so that I can
         do overlays on each other.  For example, the traditional
         circle astro chart overlapping the square of 9 on a
         QGraphicsScene.  That way I can do a transform on one
         (rotation) to anchor or align one with the other.
